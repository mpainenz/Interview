name: build and test
on:
  push:
  pull_request:
    branches: [ main ]
    paths-ignore:
    - 'README.md'
env:
  DOTNET_VERSION: '5.0.x'
jobs:
  build-and-test:
    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Install dependencies
      run: |
        dotnet restore CanWeFixIt/CanWeFixIt.sln
        dotnet restore YesWeCan/YesWeCan.sln

    - name: Build
      run: |
        dotnet build --configuration Release --no-restore CanWeFixIt/CanWeFixIt.sln
        dotnet build --configuration Release --no-restore YesWeCan/YesWeCan.sln

    - name: Test
      run: |
        cd CanWeFixIt
        dotnet test --no-restore --verbosity normal /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=lcov
        
    - name: Debug
      run: |
        cd CanWeFixIt
        cd tests
        ls CanWeFixItApi.IntegrationTests
        ls CanWeFixItService.Tests

    - name: Publish unit test coverage report to coveralls.io   
      uses: coverallsapp/github-action@master   
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        path-to-lcov: CanWeFixIt/tests/CanWeFixItService.Tests/TestResults/coverage.info 
        parallel: true
        flag-name: Unit

    - name: Publish integration test coverage report to coveralls.io   
      uses: coverallsapp/github-action@master   
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }} 
        path-to-lcov: CanWeFixIt/tests/CanWeFixItApi.IntegrationTests/TestResults/coverage.info         
        parallel: true
        parallel-finished: true
        flag-name: Integration

    - name: Lint Code Base
      uses: github/super-linter@v4
      env:
        VALIDATE_ALL_CODEBASE: false
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}